version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

  web:
    build:
      context: .
    container_name: django_app
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    
    networks:
      - backend

  celery:
    build: .
    container_name: celery_worker
    command: >
      sh -c "
        celery -A project worker --loglevel=info"
    depends_on:
      - web
      - redis
    volumes:
      - .:/opt/webapp
    networks:
      - backend

  celery-beat:
    build: .
    container_name: celery_beat
    command: >
      sh -c "
        celery -A project beat --loglevel=info"
    depends_on:
      - web
      - redis
    volumes:
      - .:/opt/webapp
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend:

command: >
  sh -c "
    python manage.py migrate &&
    python manage.py collectstatic --noinput &&
    gunicorn project.wsgi:application --bind 0.0.0.0:8000"